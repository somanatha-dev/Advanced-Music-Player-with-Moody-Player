mport React, { useEffect, useRef } from "react";
import * as faceapi from "face-api.js";

export default function FacialExpression() {
  const videoRef = useRef();

  // Detect faces & expressions
  async function detectMood() {
    const detections = await faceapi
      .detectAllFaces(videoRef.current, new faceapi.TinyFaceDetectorOptions())
      .withFaceExpressions();

    let mostProbableExpression = 0;
    let _expression = "";

    if (!detections || detections.length === 0) {
      console.log("No face detected");
      return;
    }

    for (const expression in detections[0].expressions) {
      if (detections[0].expressions[expression] > mostProbableExpression) {
        mostProbableExpression = detections[0].expressions[expression];
        _expression = expression;
      }
    }
    console.log(_expression);
  }

  useEffect(() => {
    const MODEL_URL = "/models";

    const loadModels = async () => {
      await faceapi.nets.tinyFaceDetector.loadFromUri(MODEL_URL);
      await faceapi.nets.faceExpressionNet.loadFromUri(MODEL_URL);
    };

    const startVideo = () => {
      navigator.mediaDevices
        .getUserMedia({ video: true })
        .then((stream) => {
          videoRef.current.srcObject = stream;
        })
        .catch((err) => console.error("Error accessing webcam:", err));
    };

    loadModels().then(startVideo);
  }, []);

  return (
    <div
      style={{
        position: "fixed", // stay in place
        top: "50%", // middle vertically
        left: "50%", // middle horizontally
        transform: "translate(-50%, -50%)", // shift back half its size
        display: "flex",
        flexDirection: "column",
        alignItems: "center",
        justifyContent: "center",
        backgroundColor: "#000", // optional
        padding: "20px",
        borderRadius: "10px",
      }}
    >
      <video
        ref={videoRef}
        autoPlay
        muted
        style={{
          width: "720px",
          height: "560px",
          backgroundColor: "#111",
          borderRadius: "8px",
        }}
      />
      <button
        onClick={detectMood}
        style={{
          marginTop: "15px",
          padding: "10px 20px",
          backgroundColor: "#153503ff",
          color: "#fff",
          border: "none",
          borderRadius: "5px",
          fontSize: "16px",
          cursor: "pointer",
        }}
      >
        Detect Mood
      </button>
    </div>
  );
}
